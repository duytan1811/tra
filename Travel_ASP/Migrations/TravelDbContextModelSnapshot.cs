// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STM.DataAccess.Contexts;

#nullable disable

namespace Travel_ASP.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    partial class TravelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Travel_ASP.Models.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Travel_ASP.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Travel_ASP.Models.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c68c504-5109-4fae-a80f-e5cbcaec12f0"),
                            Key = "appName",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("154e4306-fcaf-4a7e-b257-c56ac7b7544e"),
                            Key = "phone",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("cce50faa-37fa-4ed8-b663-1bd75c3f94a9"),
                            Key = "email",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("d8e605d9-f087-42ba-9b6e-258903a1e53f"),
                            Key = "defaultTourImage",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("22db1a6c-d8fb-45ee-a23d-1b0071a14172"),
                            Key = "defaultBlogImage",
                            Value = ""
                        });
                });

            modelBuilder.Entity("Travel_ASP.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Travel_ASP.Models.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39baeb22-b4d7-4071-b093-5a648be565d7"),
                            Name = "An Giang"
                        },
                        new
                        {
                            Id = new Guid("50be2ab1-eb0c-42a7-b58b-418452802065"),
                            Name = "Bà Rịa – Vũng Tàu"
                        },
                        new
                        {
                            Id = new Guid("d30782d0-46f8-4534-aa9b-c8a96a34a8de"),
                            Name = "Bắc Giang"
                        },
                        new
                        {
                            Id = new Guid("cb7d9223-a0fc-4091-ae61-fb0252be22da"),
                            Name = "Bắc Kạn"
                        },
                        new
                        {
                            Id = new Guid("a34d739d-b05f-43dd-8455-68ad897cbf8e"),
                            Name = "Bạc Liêu"
                        },
                        new
                        {
                            Id = new Guid("fb5c7eac-742a-4c88-ba75-aa274e1404fb"),
                            Name = "Bắc Ninh"
                        },
                        new
                        {
                            Id = new Guid("ccff2fb2-dbc5-4e6d-aea0-aa39da7c87c5"),
                            Name = "Bến Tre"
                        },
                        new
                        {
                            Id = new Guid("9874c76e-eafe-4816-a32f-151a6fc59ab6"),
                            Name = "Bình Định"
                        },
                        new
                        {
                            Id = new Guid("e9d47bfe-68be-4e28-af3f-6444cd2ae8ba"),
                            Name = "Bình Dương"
                        },
                        new
                        {
                            Id = new Guid("53b2e766-1eaa-47b9-b2a5-5459f8596bad"),
                            Name = "Bình Phước"
                        },
                        new
                        {
                            Id = new Guid("5ee9e5c2-3931-4264-9529-a5d4d6c79c02"),
                            Name = "Bình Thuận"
                        },
                        new
                        {
                            Id = new Guid("fea2144d-a645-4944-a544-52c2f4a9fe6f"),
                            Name = "Cà Mau"
                        },
                        new
                        {
                            Id = new Guid("0c37c0fd-b134-4dcf-8cd1-9e401b79f73b"),
                            Name = "Cần Thơ"
                        },
                        new
                        {
                            Id = new Guid("d4b07036-7e95-4c2a-837c-b0f30bd42c86"),
                            Name = "Cao Bằng"
                        },
                        new
                        {
                            Id = new Guid("d3a76ae3-fda7-4aea-a60a-8c4335a86bd8"),
                            Name = "Đà Nẵng"
                        },
                        new
                        {
                            Id = new Guid("4c3a6896-9876-455e-85bf-77427e8efddb"),
                            Name = "Đắk Lắk"
                        },
                        new
                        {
                            Id = new Guid("278b3bbd-1c7d-4d2e-81c6-5dd7594a7e74"),
                            Name = "Đắk Nông"
                        },
                        new
                        {
                            Id = new Guid("42d6c600-8b1e-43b3-8ec7-39c000f89b43"),
                            Name = "Điện Biên"
                        },
                        new
                        {
                            Id = new Guid("c7c61d02-3436-49bc-ae4e-8c058a608aa7"),
                            Name = "Đồng Nai"
                        },
                        new
                        {
                            Id = new Guid("1759e3b5-b300-4800-ad97-916b3820d121"),
                            Name = "Đồng Tháp"
                        },
                        new
                        {
                            Id = new Guid("eead0bd0-3de2-4fc3-99a1-a774e0f49187"),
                            Name = "Gia Lai"
                        },
                        new
                        {
                            Id = new Guid("0da4ee73-807a-4fe9-be2d-f32a3e76bf15"),
                            Name = "Hà Giang"
                        },
                        new
                        {
                            Id = new Guid("427b1ec1-c01b-4f73-97dd-f02fd935e508"),
                            Name = "Hà Nam"
                        },
                        new
                        {
                            Id = new Guid("4426ce92-0c13-46a6-b1ba-743f384053c2"),
                            Name = "Hà Nội"
                        },
                        new
                        {
                            Id = new Guid("9427a6d7-d835-4a1a-b06a-3bcd03314c2e"),
                            Name = "Hà Tĩnh"
                        },
                        new
                        {
                            Id = new Guid("5fd79732-298b-474c-8a1b-dcd80fc90ffa"),
                            Name = "Hải Dương"
                        },
                        new
                        {
                            Id = new Guid("79fc1791-d95a-47a5-90b3-4e092cabf258"),
                            Name = "Hải Phòng"
                        },
                        new
                        {
                            Id = new Guid("805e589f-519c-46ff-888c-a7c0944aeec5"),
                            Name = "Hậu Giang"
                        },
                        new
                        {
                            Id = new Guid("ec9cb8fb-58be-4f4b-b975-44fe8b838191"),
                            Name = "Hòa Bình"
                        },
                        new
                        {
                            Id = new Guid("afd1de18-c7b9-4bda-88ff-1899889d9e2c"),
                            Name = "Hưng Yên"
                        },
                        new
                        {
                            Id = new Guid("9a61aafd-1cdd-4dab-a042-8321570055b5"),
                            Name = "Khánh Hòa"
                        },
                        new
                        {
                            Id = new Guid("c255dc71-9b54-4f0f-99bf-237ea92b1614"),
                            Name = "Kiên Giang"
                        },
                        new
                        {
                            Id = new Guid("24d669d6-5371-4a72-801c-d512396fca16"),
                            Name = "Kon Tum"
                        },
                        new
                        {
                            Id = new Guid("da050aae-b2ea-4745-80ad-fea42f2f3fd4"),
                            Name = "Lai Châu"
                        },
                        new
                        {
                            Id = new Guid("baad4bd0-6215-44f2-b08f-e7dda5a0cfbe"),
                            Name = "Lâm Đồng"
                        },
                        new
                        {
                            Id = new Guid("6f14f511-a616-4854-ac3f-45d68fab03c0"),
                            Name = "Lạng Sơn"
                        },
                        new
                        {
                            Id = new Guid("38e721ac-c526-4cab-899b-ae68ce517d0b"),
                            Name = "Lào Cai"
                        },
                        new
                        {
                            Id = new Guid("4e08dce0-1fa6-45a6-b048-de8ff5bfdd5c"),
                            Name = "Long An"
                        },
                        new
                        {
                            Id = new Guid("d8364b93-e017-4d66-91a7-1a6923462b19"),
                            Name = "Nam Định"
                        },
                        new
                        {
                            Id = new Guid("e12f51b9-ec9f-4710-bfe0-b0cc093441bc"),
                            Name = "Nghệ An"
                        },
                        new
                        {
                            Id = new Guid("9173d0db-fef6-4fa4-a504-663e27b990ae"),
                            Name = "Ninh Bình"
                        },
                        new
                        {
                            Id = new Guid("05b61942-6804-4ee7-8a53-f42fb9e29e57"),
                            Name = "Ninh Thuận"
                        },
                        new
                        {
                            Id = new Guid("336b90be-1252-4600-a3d2-3046040eb63b"),
                            Name = "Phú Thọ"
                        },
                        new
                        {
                            Id = new Guid("7bbd3239-64fb-4d13-af4c-c6fcf032e33a"),
                            Name = "Phú Yên"
                        },
                        new
                        {
                            Id = new Guid("4fda11b0-cb47-4231-ae44-5e91aab1eb1c"),
                            Name = "Quảng Bình"
                        },
                        new
                        {
                            Id = new Guid("662390ca-3698-4868-9967-f277bb3e3d05"),
                            Name = "Quảng Nam"
                        },
                        new
                        {
                            Id = new Guid("0ef1a240-bd21-472a-9fd2-e4288e651f9a"),
                            Name = "Quảng Ngãi"
                        },
                        new
                        {
                            Id = new Guid("a280a102-1ec6-4c6c-9858-f646fa37b2b5"),
                            Name = "Quảng Ninh"
                        },
                        new
                        {
                            Id = new Guid("7b7a1fc4-072d-49fc-859b-c678cb917252"),
                            Name = "Quảng Trị"
                        },
                        new
                        {
                            Id = new Guid("2e58e891-a60c-4d7b-83f1-9ecea3eabed5"),
                            Name = "Sóc Trăng"
                        },
                        new
                        {
                            Id = new Guid("6e6af074-6f20-4b1b-a0fa-6bb2a81175ed"),
                            Name = "Sơn La"
                        },
                        new
                        {
                            Id = new Guid("fe276321-20d1-47be-909d-977db74086e5"),
                            Name = "Tây Ninh"
                        },
                        new
                        {
                            Id = new Guid("2e8de93a-4bf2-447f-9d41-22e9bac83f05"),
                            Name = "Thái Bình"
                        },
                        new
                        {
                            Id = new Guid("2caa5d66-92ce-45f8-8bd5-69d54cfc9e86"),
                            Name = "Thái Nguyên"
                        },
                        new
                        {
                            Id = new Guid("976f8c4b-a929-4a7e-817f-5af090cec540"),
                            Name = "Thanh Hóa"
                        },
                        new
                        {
                            Id = new Guid("eefcffd1-b17e-4d45-be11-9e0857d6b433"),
                            Name = "Thừa Thiên Huế"
                        },
                        new
                        {
                            Id = new Guid("61522160-e263-4b4d-bfac-77503c14d159"),
                            Name = "Tiền Giang"
                        },
                        new
                        {
                            Id = new Guid("0b0789f1-9eb3-4a13-9c9a-405ca38d4019"),
                            Name = "Thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("06ea0cc0-358e-48fd-9945-352c618eb4ea"),
                            Name = "Trà Vinh"
                        },
                        new
                        {
                            Id = new Guid("02b2fda4-3315-4e7b-8484-0ab1a16b105d"),
                            Name = "Tuyên Quang"
                        },
                        new
                        {
                            Id = new Guid("b7b07fb6-cad8-4612-ad68-0714f9ba8895"),
                            Name = "Vĩnh Long"
                        },
                        new
                        {
                            Id = new Guid("e3042da3-70dd-44c9-8f92-bba6d9f6d1d9"),
                            Name = "Vĩnh Phúc"
                        },
                        new
                        {
                            Id = new Guid("768f56b1-2802-436d-b12c-16ce1f1cf86f"),
                            Name = "Yên Bái"
                        });
                });

            modelBuilder.Entity("Travel_ASP.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Travel_ASP.Models.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Travel_ASP.Models.Tour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<int?>("MinPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Travel_ASP.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(256);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b2863d1-3468-4ad0-8881-ca52cdf1307d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "616f1653-48e9-4a6f-81b3-1bdd52e565b5",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            IsAdmin = true,
                            LockoutEnabled = true,
                            Name = "Admin",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEPH8uBiczPM4CfUP4npJs7EkyD+bJTh8RPG+yHshv8dCpDqyJLLPJR0R/Vf6caAkvg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ZY5BGSWBARTE74T6ZLO7WKKMMILBEB2E",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Travel_ASP.Models.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Travel_ASP.Models.Booking", b =>
                {
                    b.HasOne("Travel_ASP.Models.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Travel_ASP.Models.RoleClaim", b =>
                {
                    b.HasOne("Travel_ASP.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Travel_ASP.Models.Tour", b =>
                {
                    b.HasOne("Travel_ASP.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserClaim", b =>
                {
                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserLogin", b =>
                {
                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserRole", b =>
                {
                    b.HasOne("Travel_ASP.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserToken", b =>
                {
                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Travel_ASP.Models.User", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
