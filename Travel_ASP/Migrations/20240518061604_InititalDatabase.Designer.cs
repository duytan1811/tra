// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STM.DataAccess.Contexts;

#nullable disable

namespace Travel_ASP.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20240518061604_InititalDatabase")]
    partial class InititalDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Travel_ASP.Models.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Travel_ASP.Models.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dae5400a-54d2-4568-8566-6e89c6dc9f87"),
                            Key = "appName",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("01280e36-02e6-4663-823e-5e14e287bede"),
                            Key = "phone",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("b8d91fab-5b62-41ef-aacb-19791db98739"),
                            Key = "email",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("11d9a927-1770-439e-9daf-095a66d1d7b3"),
                            Key = "defaultTourImage",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("5e77b941-2315-477e-a05a-69679da70afc"),
                            Key = "defaultBlogImage",
                            Value = ""
                        });
                });

            modelBuilder.Entity("Travel_ASP.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Travel_ASP.Models.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5098c722-7a8f-4be0-a266-1980593f060d"),
                            Name = "An Giang"
                        },
                        new
                        {
                            Id = new Guid("b81f8a3f-6e0a-439c-81ea-31c38f41a554"),
                            Name = "Bà Rịa – Vũng Tàu"
                        },
                        new
                        {
                            Id = new Guid("ece5d94b-66e1-45be-bcdb-2f64b8aa48d4"),
                            Name = "Bắc Giang"
                        },
                        new
                        {
                            Id = new Guid("61fd92f9-653a-42df-8e0d-861acf1e064e"),
                            Name = "Bắc Kạn"
                        },
                        new
                        {
                            Id = new Guid("da4d3994-f416-4746-a994-65fb2cfedfd8"),
                            Name = "Bạc Liêu"
                        },
                        new
                        {
                            Id = new Guid("ea50ceec-b4c2-4075-b388-2fdb4bb262e6"),
                            Name = "Bắc Ninh"
                        },
                        new
                        {
                            Id = new Guid("71b348cc-90b2-49fa-afee-d929f9695c93"),
                            Name = "Bến Tre"
                        },
                        new
                        {
                            Id = new Guid("0049f9c7-aa39-4b87-886b-0e5ac0ff5342"),
                            Name = "Bình Định"
                        },
                        new
                        {
                            Id = new Guid("3be2834f-d469-4656-a354-f0981414b78d"),
                            Name = "Bình Dương"
                        },
                        new
                        {
                            Id = new Guid("bfad7a5b-7c65-4104-951d-184bd26760f1"),
                            Name = "Bình Phước"
                        },
                        new
                        {
                            Id = new Guid("4aa677a3-ac6d-4225-a3d7-e3174136fbc8"),
                            Name = "Bình Thuận"
                        },
                        new
                        {
                            Id = new Guid("3178fe83-f1da-458f-9caa-cb06fcc3710c"),
                            Name = "Cà Mau"
                        },
                        new
                        {
                            Id = new Guid("9c05d561-d439-4ddd-a347-dbe22f56f80c"),
                            Name = "Cần Thơ"
                        },
                        new
                        {
                            Id = new Guid("d9bd3cc1-fe39-47ae-ac9b-4471fccb9241"),
                            Name = "Cao Bằng"
                        },
                        new
                        {
                            Id = new Guid("f81e06ee-36eb-4d29-83fe-7d11dc91536b"),
                            Name = "Đà Nẵng"
                        },
                        new
                        {
                            Id = new Guid("0850c75d-963b-4d86-885a-5efdb7ce3553"),
                            Name = "Đắk Lắk"
                        },
                        new
                        {
                            Id = new Guid("9f058b4e-db77-49d0-abb2-0f83deb6d9a0"),
                            Name = "Đắk Nông"
                        },
                        new
                        {
                            Id = new Guid("6974ced2-6557-49d8-8500-1c1dd67c7723"),
                            Name = "Điện Biên"
                        },
                        new
                        {
                            Id = new Guid("95c2946f-4f20-4614-88dc-1123935fa6a4"),
                            Name = "Đồng Nai"
                        },
                        new
                        {
                            Id = new Guid("5dbf9ce3-23a2-43f1-9a73-acd466be1bc3"),
                            Name = "Đồng Tháp"
                        },
                        new
                        {
                            Id = new Guid("482739cb-06cc-4b5e-8c87-2a0027e1af3b"),
                            Name = "Gia Lai"
                        },
                        new
                        {
                            Id = new Guid("4ae12f71-ba21-41fd-a6d8-66cd3f633748"),
                            Name = "Hà Giang"
                        },
                        new
                        {
                            Id = new Guid("9b8193ee-b69c-4c76-b8d1-b97942af268e"),
                            Name = "Hà Nam"
                        },
                        new
                        {
                            Id = new Guid("7fb45860-256e-4045-bc14-fd8c550e7206"),
                            Name = "Hà Nội"
                        },
                        new
                        {
                            Id = new Guid("e109d927-710e-49a0-8ae4-52c2f57b2064"),
                            Name = "Hà Tĩnh"
                        },
                        new
                        {
                            Id = new Guid("e317318f-547d-46e7-b077-476d97d0735e"),
                            Name = "Hải Dương"
                        },
                        new
                        {
                            Id = new Guid("39e8bf36-6628-4aa0-8ada-b2930eff3000"),
                            Name = "Hải Phòng"
                        },
                        new
                        {
                            Id = new Guid("5b784652-5ed6-4773-bb19-f7fce97a61c8"),
                            Name = "Hậu Giang"
                        },
                        new
                        {
                            Id = new Guid("bb843c76-d840-4fe6-ad91-0f0b947ab23a"),
                            Name = "Hòa Bình"
                        },
                        new
                        {
                            Id = new Guid("67b952a7-18d6-4241-a21e-16b151328b7b"),
                            Name = "Hưng Yên"
                        },
                        new
                        {
                            Id = new Guid("6a996415-fee7-4410-b675-1732583a6704"),
                            Name = "Khánh Hòa"
                        },
                        new
                        {
                            Id = new Guid("5add419a-f809-47ae-b8d9-80edce9dc41e"),
                            Name = "Kiên Giang"
                        },
                        new
                        {
                            Id = new Guid("c3aa0c9d-d274-4bea-b1f3-1e3d505c32f7"),
                            Name = "Kon Tum"
                        },
                        new
                        {
                            Id = new Guid("d36dc3c9-4752-434f-87d7-4b0a7b95c955"),
                            Name = "Lai Châu"
                        },
                        new
                        {
                            Id = new Guid("938e3890-2ba4-46e7-b4b4-532a8c729cf9"),
                            Name = "Lâm Đồng"
                        },
                        new
                        {
                            Id = new Guid("84eec50a-b9f1-4daf-b54b-8caa1adc2357"),
                            Name = "Lạng Sơn"
                        },
                        new
                        {
                            Id = new Guid("e1ec1a9a-f469-423f-970f-f9139008a378"),
                            Name = "Lào Cai"
                        },
                        new
                        {
                            Id = new Guid("07482a9f-9385-48b9-8f8d-40e3abb54b0a"),
                            Name = "Long An"
                        },
                        new
                        {
                            Id = new Guid("0ecef50e-c372-4ce8-a3d4-9e0b81bd8e24"),
                            Name = "Nam Định"
                        },
                        new
                        {
                            Id = new Guid("14884c7b-30e9-487c-8a92-e9bb539e69dd"),
                            Name = "Nghệ An"
                        },
                        new
                        {
                            Id = new Guid("83741c05-d0db-4c65-978c-5ac853c6e9f4"),
                            Name = "Ninh Bình"
                        },
                        new
                        {
                            Id = new Guid("87c60cdf-06ad-433c-9b6f-105a07a57508"),
                            Name = "Ninh Thuận"
                        },
                        new
                        {
                            Id = new Guid("09fa3865-4cc7-4c0f-8ffd-654de8dea2d9"),
                            Name = "Phú Thọ"
                        },
                        new
                        {
                            Id = new Guid("2bc4da99-1191-4c15-b966-74e1e8bd5ff2"),
                            Name = "Phú Yên"
                        },
                        new
                        {
                            Id = new Guid("63d4a117-5bcd-4d5f-a412-c48130971aaf"),
                            Name = "Quảng Bình"
                        },
                        new
                        {
                            Id = new Guid("a4809a85-4e23-48e6-af79-18f711f91933"),
                            Name = "Quảng Nam"
                        },
                        new
                        {
                            Id = new Guid("2ae69a2a-7cbb-493f-954c-f884ec829656"),
                            Name = "Quảng Ngãi"
                        },
                        new
                        {
                            Id = new Guid("3e69ed6f-8c20-4936-98db-52b07621ac59"),
                            Name = "Quảng Ninh"
                        },
                        new
                        {
                            Id = new Guid("694ba9ec-bd31-403e-bfe0-2de5a2b537c2"),
                            Name = "Quảng Trị"
                        },
                        new
                        {
                            Id = new Guid("0e888f9c-4cec-4c4e-9318-80bbf130b501"),
                            Name = "Sóc Trăng"
                        },
                        new
                        {
                            Id = new Guid("76f6a11f-dcc0-4496-9969-7fae593d900c"),
                            Name = "Sơn La"
                        },
                        new
                        {
                            Id = new Guid("62539ba1-53ba-41e1-b54f-a09fffd18d3a"),
                            Name = "Tây Ninh"
                        },
                        new
                        {
                            Id = new Guid("480739d3-559b-4945-9a4a-f4b320bf742c"),
                            Name = "Thái Bình"
                        },
                        new
                        {
                            Id = new Guid("01bfe577-4b91-40b7-a580-cf200362d243"),
                            Name = "Thái Nguyên"
                        },
                        new
                        {
                            Id = new Guid("21268bac-5f6f-4240-8a2d-6fd0a15c319c"),
                            Name = "Thanh Hóa"
                        },
                        new
                        {
                            Id = new Guid("51c47de0-06af-42d5-9258-07ff826dfe8f"),
                            Name = "Thừa Thiên Huế"
                        },
                        new
                        {
                            Id = new Guid("c64d6812-e660-4de4-b9ed-bd339ab758a8"),
                            Name = "Tiền Giang"
                        },
                        new
                        {
                            Id = new Guid("7c6bd094-b67f-4462-898f-e5b6ea08f313"),
                            Name = "Thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("73a948cc-fd6f-4dd9-9c79-346977cea1c2"),
                            Name = "Trà Vinh"
                        },
                        new
                        {
                            Id = new Guid("9893a16e-b753-492f-b99a-5802000ddafb"),
                            Name = "Tuyên Quang"
                        },
                        new
                        {
                            Id = new Guid("2207dfcf-efef-4f9d-af9f-1a8d91a79041"),
                            Name = "Vĩnh Long"
                        },
                        new
                        {
                            Id = new Guid("fad19112-3f4a-4e53-949d-b9a1128ff168"),
                            Name = "Vĩnh Phúc"
                        },
                        new
                        {
                            Id = new Guid("cad9d75e-e333-4192-a6e2-b3bc61bbed48"),
                            Name = "Yên Bái"
                        });
                });

            modelBuilder.Entity("Travel_ASP.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Travel_ASP.Models.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Travel_ASP.Models.Tour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<int?>("MinPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Travel_ASP.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(256);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b2863d1-3468-4ad0-8881-ca52cdf1307d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "616f1653-48e9-4a6f-81b3-1bdd52e565b5",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            IsAdmin = true,
                            LockoutEnabled = true,
                            Name = "Admin",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAED+SeOCagZl5GUfApy+o5Ne/mqFFBr5h9qlLZ98WSR8NOTMUH7qrRO3/dvl0F5hf5w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ZY5BGSWBARTE74T6ZLO7WKKMMILBEB2E",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Travel_ASP.Models.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Travel_ASP.Models.RoleClaim", b =>
                {
                    b.HasOne("Travel_ASP.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Travel_ASP.Models.Tour", b =>
                {
                    b.HasOne("Travel_ASP.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserClaim", b =>
                {
                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserLogin", b =>
                {
                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserRole", b =>
                {
                    b.HasOne("Travel_ASP.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.UserToken", b =>
                {
                    b.HasOne("Travel_ASP.Models.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_ASP.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Travel_ASP.Models.User", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
